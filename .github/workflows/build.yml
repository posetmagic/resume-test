name: Build and Deploy CV
on:
  push:
    branches: ["main"]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Set matrix
        id: set-matrix
        run: |
          # Find all .tex files and create JSON array
          FILES=$(find . -type f -name "*.tex" | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$FILES" >> $GITHUB_OUTPUT

      - name: Debug matrix
        run: |
          echo "Matrix: ${{ steps.set-matrix.outputs.matrix }}"

  latex-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.build.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get directory
        id: get-dir
        run: |
          FILE_PATH="${{ matrix.file }}"
          DIR_PATH=$(dirname "$FILE_PATH")
          echo "dir=$DIR_PATH" >> $GITHUB_OUTPUT
          echo "filename=$(basename "$FILE_PATH")" >> $GITHUB_OUTPUT

      - name: Build LaTeX files
        uses: dante-ev/latex-action@latest
        with:
          root_file: ${{ steps.get-dir.outputs.filename }}
          working_directory: ${{ steps.get-dir.outputs.dir }}

      - name: Save PDF artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file }}
          path: ${{ steps.get-dir.outputs.dir }}/${{ steps.get-dir.outputs.filename }}.pdf
          retention-days: 1

  collect:
    needs: latex-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create site directory
        run: mkdir -p _site

      - name: Download all PDFs
        uses: actions/download-artifact@v3
        with:
          path: _site

      - name: Debug directory structure
        run: |
          echo "Current directory contents:"
          ls -la
          echo "\n_site directory contents:"
          ls -la _site

      - name: Copy index.html and CNAME
        run: |
          cp index.html _site/ || true
          cp CNAME _site/ || true

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: collect
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}